spring.main.allow-bean-definition-overriding=true

## ?????
spring.shardingsphere.datasource.names=ds0

spring.shardingsphere.datasource.ds0.type= com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name= com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.jdbc-url= jdbc:mysql://localhost:3306/db-order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.url= jdbc:mysql://localhost:3306/db_order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.username= root
spring.shardingsphere.datasource.ds0.password= 123456
#spring.shardingsphere.datasource.ds0.<xxx>= # ... ???????????



## ?????

## ?? t_order_xx ?????
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds0.t_order_0$->{0..9}


## ?? t_order_xx ?? order_id???? SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.column= order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type= SNOWFLAKE

## ?????? inline standard
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column= order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression= t_order_0$->{order_id % 10}

## ?? sql ????
spring.shardingsphere.props.sql.show= true
