spring.main.allow-bean-definition-overriding=true

## ?? sql ????
spring.shardingsphere.props.sql.show= true

## ?????
spring.shardingsphere.datasource.names=ds0,ds1,ds2

spring.shardingsphere.datasource.ds0.type= com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name= com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.jdbc-url= jdbc:mysql://localhost:3306/db-order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.url= jdbc:mysql://localhost:3306/db_order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.username= root
spring.shardingsphere.datasource.ds0.password= 123456
#spring.shardingsphere.datasource.ds0.<xxx>= # ... ???????????

spring.shardingsphere.datasource.ds1.type= com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name= com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url= jdbc:mysql://localhost:3307/db-order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.url= jdbc:mysql://localhost:3307/db_order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.username= root
spring.shardingsphere.datasource.ds1.password= 123456
#spring.shardingsphere.datasource.ds0.<xxx>= # ... ???????????


spring.shardingsphere.datasource.ds2.type= com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2.driver-class-name= com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds2.jdbc-url= jdbc:mysql://localhost:3307/db-order_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds2.url= jdbc:mysql://localhost:3307/db_user_01?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds2.username= root
spring.shardingsphere.datasource.ds2.password= 123456
#spring.shardingsphere.datasource.ds0.<xxx>= # ... ???????????


## ?????

## ?? t_order_xx ?????
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_0$->{0..9}

spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column= user_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression= ds$->{user_id % 2}

## ?? t_order_xx ?? order_id????
spring.shardingsphere.sharding.tables.t_order.key-generator.column= order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type= SNOWFLAKE

## ?????? inline standard
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column= order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression= t_order_0$->{order_id % 10}



## ?? t_user_xx ?????
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds2.t_user_0$->{0..9}

#spring.shardingsphere.sharding.tables.t_user.database-strategy.inline.sharding-column= user_id
#spring.shardingsphere.sharding.tables.t_user.database-strategy.inline.algorithm-expression= ds$->{user_id % 2}

## ?? t_user_xx ?? order_id????
spring.shardingsphere.sharding.tables.t_user.key-generator.column= user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type= SNOWFLAKE

## ?????? inline standard
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column= user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression= t_user_0$->{user_id % 10}

